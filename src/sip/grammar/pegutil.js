/**
 * @fileoverview This has been pulled out of the autogenerated pegjs parsers in
 * order to make it play better with the closure compiler
 */
goog.provide('jssip.sip.grammar.pegutil');
goog.provide('jssip.sip.grammar.pegutil.SyntaxError');



/**
 * @param {string} s
 * @return {string}
 */
jssip.sip.grammar.pegutil.quote = function(s) {
  /*
   * ECMA-262, 5th ed., 7.8.4: All characters may appear literally in a
   * string literal except for the closing quote character, backslash,
   * carriage return, line separator, paragraph separator, and line feed.
   * Any character may appear in the form of an escape sequence.
   *
   * For portability, we also escape escape all control and non-ASCII
   * characters. Note that "\0" and "\v" escape sequences are not used
   * because JSHint does not like the first and IE the second.
   */
  return '"' + s
               .replace(/\\/g, '\\\\')  // backslash
               .replace(/"/g, '\\"')    // closing quote character
               .replace(/\x08/g, '\\b') // backspace
               .replace(/\t/g, '\\t')   // horizontal tab
               .replace(/\n/g, '\\n')   // line feed
               .replace(/\f/g, '\\f')   // form feed
               .replace(/\r/g, '\\r')   // carriage return
               .replace(/[\x00-\x07\x0B\x0E-\x1F\x80-\uFFFF]/g, escape)
       + '"';
};


/**
 * @param {*} expected
 * @param {*} found
 * @param {*} offset
 * @param {*} line
 * @param {*} column
 * @constructor
 * @extends {Error}
 */
jssip.sip.grammar.pegutil.SyntaxError = function(
    expected, found, offset, line, column) {
  function buildMessage(expected, found) {
    var expectedHumanized, foundHumanized;

    switch (expected.length) {
      case 0:
      expectedHumanized = "end of input";
      break;
      case 1:
      expectedHumanized = expected[0];
      break;
      default:
      expectedHumanized = expected.slice(0, expected.length - 1).join(", ")
                        + " or "
                        + expected[expected.length - 1];
    }

    foundHumanized = found ?
        jssip.sip.grammar.pegutil.quote(found) :
        "end of input";

    return "Expected " + expectedHumanized + " but " + foundHumanized + " found.";
  }

  this.name = "SyntaxError";
  this.expected = expected;
  this.found = found;
  this.message = buildMessage(expected, found);
  this.offset = offset;
  this.line = line;
  this.column = column;
};
goog.inherits(jssip.sip.grammar.pegutil.SyntaxError, Error);
